from aiogram import types, Router, F
from aiogram.filters import Command, or_f

from database import sqlite

from keyboards import main_kb, inline_builder

from utils import get_project_root

router = Router()

@router.message(or_f(Command('start'), F.text == "–ú–µ–Ω—é"))
async def menu_cmd(message: types.Message, isAdmin: bool):
    filename = get_project_root('assets/logo.png')
    kb = main_kb.inlineKb(isAdmin)
    await message.bot.send_photo(chat_id=message.from_user.id, photo=types.FSInputFile(path=filename), caption='', reply_markup=kb)
    await message.delete()

@router.message(or_f(Command('help'), F.text == "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏"))
async def help_cmd(message: types.Message):
    filename = get_project_root('assets/logo.png')
    caption = (
        "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:\n"
        "\n"
        "<b>–ö–∞–∫ –≤—ã–∑–≤–∞—Ç—å –º–µ–Ω—é ‚ùì</b>\n"
        "-–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /menu –ª–∏–±–æ –∂–µ –Ω–∞–ø–∏—à–∏—Ç–µ –ú–µ–Ω—é\n"
        "\n"
        "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ ‚ùì</b>\n"
        "-–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /info –ª–∏–±–æ –∂–µ –Ω–∞–ø–∏—à–∏—Ç–µ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\n"
        "\n"
        "<b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª ‚ùì</b>\n"
        "-–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /random_material\n"
        "\n"
        "<b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –ø—Ä–æ–±–Ω–∏–∫ ‚ùì</b>\n"
        "-–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /random_test\n"
    )
    await message.bot.send_photo(chat_id=message.from_user.id, photo=types.FSInputFile(path=filename), caption=caption, reply_markup=inline_builder(text='¬´ –ù–∞–∑–∞–¥', callback_data='delete'))
    await message.delete()

@router.message(or_f(Command('info'), F.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"))
async def info_cmd(message: types.Message):
    filename = get_project_root('assets/logo.png')
    caption = (
        "üå± –Ø –º—É–ª—å—Ç–∏—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, —É–¥–æ–±–Ω—ã–π –∏ —ç—Ä–≥–æ–Ω–æ–º–∏—á–Ω—ã–π –±–æ—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—é –≤ –ù–∞–∑–∞—Ä–±–∞–µ–≤—Å–∫–∏–µ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –®–∫–æ–ª—ã.\n"
        "\n"
        "<b>–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å:</b>\n"
        "-@ansagang \n"
        "\n"
        "<b>–¢–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª:</b>\n"
        "-https://t.me/+H84YQ_dEzzxmMzgy\n"
    )
    await message.bot.send_photo(chat_id=message.from_user.id, photo=types.FSInputFile(path=filename), caption=caption, reply_markup=inline_builder(text='¬´ –ù–∞–∑–∞–¥', callback_data='delete'))
    await message.delete()

@router.message(Command('random_test'))
async def random_test(message: types.Message):
    test = await sqlite.sql_random_test()
    pattern = {
        "caption": (
            "<b>"+test[1]+"</b>\n"
            "\n"
            "üìÑ "+test[2]
        ),
        "reply_markup": inline_builder(text='¬´ –ù–∞–∑–∞–¥', callback_data='delete', sizes=1),
        "document": test[0]
    }
    await message.bot.send_document(**pattern)
    await message.delete()

@router.message(Command('random_material'))
async def random_material(message: types.Message):
    material = await sqlite.sql_random_material()
    pattern = {
        "caption": (
            "<b>"+material[1]+"</b>\n"
            "\n"
            "üìö "+material[2]
        ),
        "reply_markup": inline_builder(text='¬´ –ù–∞–∑–∞–¥', callback_data='delete', sizes=1),
        "photo": material[0]
    }
    await message.bot.send_document(**pattern)
    await message.delete()

# @router.message(and_f(IsGroup(), isCussword()))
# async def words_filter(message: types.Message):
#     await message.bot.delete_message(chat_id=message.chat.id, message_id=message.message_id)